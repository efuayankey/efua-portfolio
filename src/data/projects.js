export const projects = [
  {
    id: 'nexttointern',
    title: 'NextToIntern',
    subtitle: 'Connecting students for internship prep and networking',
    category: 'Full-Stack',
    year: '2024',
    rating: '92%',
    status: 'Live',
    description: 'A platform that helps Lehigh students find internship preparation partners. Built with Next.js, Firebase, and AI-powered matching.',
    fullDescription: 'I built this because I was tired of seeing students struggle to find study partners for internship prep. The platform uses AI to match students based on their goals, availability, and preferences. In just 3 weeks, we had 70+ active users and over 120 posts.',
    problemStatement: 'Students at Lehigh were struggling to find peers with similar internship goals for preparation and practice. Most were studying alone or in random groups that didn\'t match their target roles or preparation style.',
    solutionApproach: 'I designed an intelligent matching system that connects students based on their target roles, preparation timeline, and availability. The platform features real-time chat, group formation tools, and gamified engagement to keep users active.',
    technicalImplementation: 'Built the frontend with Next.js and React for fast, responsive user experience. Used Firebase for authentication and real-time data storage. Integrated GPT-4 APIs to power the matching algorithm, which analyzes user profiles and suggests compatible study partners. Implemented Tailwind CSS for consistent, mobile-first design.',
    keyLearnings: 'This project taught me how to balance technical complexity with user experience. I learned that launching early and iterating based on user feedback is crucial - our initial matching algorithm was too complex, but user testing showed us what actually mattered to students.',
    tech: ['Next.js', 'Firebase', 'GPT-4', 'Tailwind CSS'],
    metrics: ['70+ users in 3 weeks', '120+ posts generated', '65% increase in session duration'],
    iconName: 'Users',
    image: 'https://images.unsplash.com/photo-1522202176988-66273c2fd55f?w=800&h=600&fit=crop&crop=center',
    github: 'https://github.com/efuayankey',
    featured: true
  },
  {
    id: 'aimes',
    title: 'AIMES Chatbot',
    subtitle: 'AI mental health support with cultural awareness',
    category: 'AI Research',
    year: '2025',
    rating: '89%',
    status: 'Research',
    description: 'A culturally adaptive mental health chatbot that understands different backgrounds and adjusts its responses accordingly.',
    fullDescription: 'This research project focused on making AI more culturally aware. I worked with psychology researchers to build a chatbot that adapts its tone and responses based on cultural context. We tested it with 30+ participants and saw significant improvements in user engagement.',
    problemStatement: 'Generic mental health chatbots often fail to connect with users from diverse cultural backgrounds because they don\'t understand cultural nuances in communication styles, values, and help-seeking behaviors.',
    solutionApproach: 'I developed a modular prompt engineering system that dynamically adjusts GPT-4 responses based on user cultural profiles. The system considers communication directness, family dynamics, and cultural attitudes toward mental health.',
    technicalImplementation: 'Built the core system with Python and integrated GPT-4 through OpenAI\'s API. Created a cultural profile database and response modification engine. Used Firebase for user data storage and React for the frontend interface. Implemented A/B testing framework to measure engagement differences.',
    keyLearnings: 'I learned that cultural sensitivity in AI requires both technical innovation and deep collaboration with domain experts. The most impactful improvements came from understanding subtle communication patterns rather than obvious cultural markers.',
    tech: ['Python', 'GPT-4', 'Firebase', 'React'],
    metrics: ['83% emotional connection increase', '78% cultural relevance improvement', '30+ participant study'],
    iconName: 'Brain',
    image: 'https://images.unsplash.com/photo-1677442136019-21780ecad995?w=800&h=600&fit=crop&crop=center',
    github: 'https://github.com/efuayankey',
    featured: false
  },
  {
    id: 'facefit',
    title: 'FaceFit',
    subtitle: 'AI-powered glasses recommendation system',
    category: 'Computer Vision',
    year: '2025',
    rating: '85%',
    status: 'Beta',
    description: 'Computer vision app that analyzes face shape and recommends glasses frames that actually look good on you.',
    fullDescription: 'Shopping for glasses online sucks because you never know how they\'ll look. I built a computer vision system that analyzes your face shape in real-time and recommends frames that complement your features. The system achieved 82% accuracy in classification.',
    problemStatement: 'Online glasses shopping is frustrating because customers can\'t effectively judge how frames will look on their face shape. Most people end up with ill-fitting glasses or avoid online purchases entirely, leading to poor user experience and lost sales.',
    solutionApproach: 'I developed a real-time computer vision system that captures facial landmarks, analyzes geometric ratios to classify face shapes, and matches users with frame styles that complement their features. The system provides instant recommendations with visual explanations.',
    technicalImplementation: 'Built using OpenCV and MediaPipe for real-time facial landmark detection, extracting 468 facial points per frame. Engineered custom features from distance ratios and angles, then trained a scikit-learn classifier on face shape categories. Integrated the ML pipeline with a React frontend for live camera analysis and recommendation display.',
    keyLearnings: 'This project taught me that computer vision accuracy isn\'t just about the model - user experience design is equally important. I learned to balance technical precision with practical usability, and discovered that explaining WHY a recommendation works builds user trust in AI systems.',
    tech: ['Python', 'OpenCV', 'MediaPipe', 'Scikit-learn', 'React'],
    metrics: ['82% classification accuracy', '40% reduction in decision time', '90% user satisfaction'],
    iconName: 'Eye',
    image: 'https://images.unsplash.com/photo-1558618047-3c8c76ca7d13?w=800&h=600&fit=crop&crop=center',
    github: 'https://github.com/efuayankey',
    featured: false
  },
  {
    id: 'lstm',
    title: 'Market Predictor',
    subtitle: 'LSTM model for stock market volatility forecasting',
    category: 'Machine Learning',
    year: '2024',
    rating: '78%',
    status: 'Training',
    description: 'A deep learning model that predicts market volatility using historical data and technical indicators.',
    fullDescription: 'Personal project exploring financial machine learning. I built an LSTM model that learns from market data to predict volatility patterns. The system includes automated data collection, model retraining, and performance tracking over 100+ trading days.',
    problemStatement: 'Financial markets are notoriously difficult to predict, but volatility patterns often contain exploitable signals. Traditional technical analysis methods struggle with the complexity and non-linear relationships in market data, missing subtle patterns that could inform trading strategies.',
    solutionApproach: 'I designed an LSTM neural network that processes sequential market data including OHLCV prices, rolling returns, and technical indicators. The model learns temporal dependencies and volatility clustering patterns, with automated retraining to adapt to changing market conditions.',
    technicalImplementation: 'Built with PyTorch for the LSTM architecture, using yfinance for automated data ingestion and NumPy for feature engineering. Implemented rolling window validation, automated backtesting framework, and real-time performance monitoring. Created custom loss functions optimized for volatility prediction rather than price prediction.',
    keyLearnings: 'This project deepened my understanding of time series modeling and the challenges of financial ML. I learned that feature engineering and data preprocessing are often more impactful than model complexity, and that rigorous backtesting is essential to avoid overfitting to historical patterns.',
    tech: ['PyTorch', 'Python', 'NumPy', 'Matplotlib', 'yfinance'],
    metrics: ['100+ day testing period', 'Automated retraining pipeline', 'Real-time performance tracking'],
    iconName: 'TrendingUp',
    image: 'https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?w=800&h=600&fit=crop&crop=center',
    github: 'https://github.com/efuayankey',
    featured: false
  },
  {
    id: 'nsmq',
    title: 'NSMQ Recruit',
    subtitle: 'Academic competition recruitment platform',
    category: 'Web Development',
    year: '2022',
    rating: '95%',
    status: 'Live',
    description: 'Platform for selecting academic competition teams with automated testing and ranking.',
    fullDescription: 'Built this for my old high school in Ghana to replace manual academic tryouts. The system handles timed quizzes, automatic scoring, and instructor analytics. It\'s been serving 100+ students since 2022 and reduced grading time by 95%.',
    problemStatement: 'My former school was manually conducting academic competition tryouts using paper tests, which was time-consuming, error-prone, and provided limited analytics. Teachers spent hours grading, students received delayed feedback, and the selection process lacked transparency and consistency.',
    solutionApproach: 'I built a comprehensive web-based assessment platform with timed quizzes, automatic scoring, and real-time leaderboards. The system includes role-based access for instructors and students, detailed performance analytics, and automated team selection based on customizable criteria.',
    technicalImplementation: 'Developed with React for the frontend interface and Firebase for backend services including authentication, real-time database, and cloud functions. Implemented secure quiz timing mechanisms, automatic scoring algorithms, and comprehensive analytics dashboard. Used Tailwind CSS for responsive, mobile-first design.',
    keyLearnings: 'This early project taught me the importance of understanding user workflows before building solutions. I learned that successful software isn\'t just about features - it\'s about solving real pain points efficiently. The project also showed me how technology can democratize access to fair, transparent selection processes.',
    tech: ['React', 'Firebase', 'Tailwind CSS', 'Cloud Functions'],
    metrics: ['95% grading time reduction', '100+ active users', '40% completion rate increase'],
    iconName: 'Target',
    image: 'https://images.unsplash.com/photo-1434030216411-0b793f4b4173?w=800&h=600&fit=crop&crop=center',
    github: 'https://github.com/efuayankey',
    featured: false
  }
];